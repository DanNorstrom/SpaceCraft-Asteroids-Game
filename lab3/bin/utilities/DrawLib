DRAWLIBRARY

// awesome penta rotate explosion curved with rotation
@Override
	public void draw(Graphics2D g) {
		// animate while TLTL
		
		AffineTransform t0 = g.getTransform();
		
	  	g.translate(position.x, position.y);
	  	g.rotate(time*10);
		if (this.TLTL >=0) {
			  
			  int ri = this.time; 	// inner circle
			  int ro = (int)(this.radius + this.time);
			  int shipD = 60;
			  int lines = 90;
			  double radA = (360/lines)*Math.PI/180;

			  for (int i = -lines; i<0; i++) {
				  
				  int rand = new Random().nextInt(4);
				  switch (rand) {
				  	  case 0:
					      g.setColor(Color.blue);
					      break;
					  case 1:
						  g.setColor(Color.green);
						  break;
					  case 2:
						  g.setColor(Color.yellow);
						  break;
					  case 3:
						  g.setColor(Color.white);
						  break;	  
				  }
				  
				  if (i < -lines/2) ro = 5*(Math.abs(i+lines/2));
				  if (i >= -lines/2) ro = 5*(Math.abs(i+1));
				  g.drawLine((int)(ri*Math.cos(i*radA)), shipD+(int)(ri*Math.sin(i*radA)), (int)(ro*Math.cos(i*radA)), shipD+(int)(ro*Math.sin(i*radA)));			
			  }
		}
		g.setTransform(t0);
	}
	
	
	
// RED SHARINGAN!	
	@Override
	public void draw(Graphics2D g) {
		// animate while TLTL
		// penta circles rotating a following target
		
		AffineTransform t0 = g.getTransform();
		
	  	g.translate(position.x, position.y);
	  	g.rotate(time*10);
		if (this.TLTL >=0) {
			  
			  int ri = this.time; 	// inner circle
			  int ro = (int)(this.time);
			  int shipD = 60;
			  int lines = 180;
			  double radA = (360/lines)*Math.PI/180;

			  for (int i = -lines; i<0; i++) {
				  g.setColor(Color.red);
				  
				  if (i < -lines/2) ro = (Math.abs(i+lines/2));
				  if (i >= -lines/2) ro = (Math.abs(i+1));
				  g.drawLine((int)(ri*Math.cos(i*radA)), shipD+(int)(ri*Math.sin(i*radA)), (int)(ro*Math.cos(i*radA)), shipD+(int)(ro*Math.sin(i*radA)));			
			  }
		}
		g.setTransform(t0);
	}